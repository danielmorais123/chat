import Head from "next/head";

import { Poppins } from "@next/font/google";
import LeftSideBar from "@/components/LeftSideBar";
import MessagesChats from "@/components/MessagesChats";
import ChatWithUser from "@/components/ChatWithUser";
import Directory from "@/components/Directory";
import React, { useEffect, useState } from "react";
import Auth from "@/components/auth/Auth";
import { supabase } from "@/lib/supabase";
import { useSession } from "@supabase/auth-helpers-react";
import ModalAddChat from "@/components/modals/ModalAddChat";
import { useDispatch, useSelector } from "react-redux";
import { selectUsers, setUsers } from "@/redux/slices/users";
import { User } from "@/types/typing";
import { selectUser, setUser } from "@/redux/slices/user";
import { icons } from "@/lib/icons";
import { selectTheme } from "@/redux/slices/theme";

const poppins = Poppins({ subsets: ["latin"], weight: "400" });

export default function Home() {
  const session = useSession();
  const user = useSelector(selectUser);
  const [open, setOpen] = useState<boolean>(false);
  const dispatch = useDispatch();
  const users: User[] = useSelector(selectUsers);
  const [showLeftbar, setShowLeftbar] = useState<boolean>(false);
  const theme = useSelector(selectTheme);
  console.log({ theme });
  useEffect(() => {
    if (!session) {
      dispatch(setUser(null));
      return;
    }

    supabase
      .from("users")
      .select()
      .eq("email", session?.user?.email)
      .then((res) => {
        if (res.data) dispatch(setUser(res?.data[0]));
        else {
          supabase.from("users").insert({
            email: session?.user?.email,
            pic: icons[
              Math.floor(Math.random() * (Math.floor(3) - Math.ceil(0) + 1)) + 0
            ].url,
            username: session?.user?.user_metadata?.name,
          });
        }
      });
  }, [session]);

  useEffect(() => {
    supabase
      .from("users")
      .select()
      .then((res) => {
        if (res.data) dispatch(setUsers(res?.data));
      });
  }, []);

  if (!user) return <Auth setUser={setUser} />;

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div
        className={`${poppins.className} ${theme} h-screen bg-gray-20 w-full text-[#292929] relative flex `}
      >
        <ModalAddChat open={open} setOpen={setOpen} />
        <LeftSideBar setUser={setUser} user={user} />
        <MessagesChats
          user={user}
          open={open}
          setOpen={setOpen}
          showLeftbar={showLeftbar}
          setShowLeftbar={setShowLeftbar}
        />
        <ChatWithUser
          showLeftbar={showLeftbar}
          setShowLeftbar={setShowLeftbar}
        />
        <Directory />
      </div>
    </>
  );
}
